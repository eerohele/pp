(require '[cognitect.transcriptor :as xr])

(require '[clojure.pprint :as cpp])
(require '[clojure.spec.alpha :as spec])

(require '[me.flowthing.pp :as pp])

(spec/def ::pass? true?)
(spec/def ::ret (spec/keys :req-un [::pass?]))

(set! *print-length* nil)
(set! *print-level* nil)

(require '[clojure.repl :as repl])

(def clojure-core-sources
  (eduction
    (map val)
    (map symbol)
    (keep
      (fn [sym]
        (try
          (repl/source-fn sym)
          (catch RuntimeException _))))
    (map (fn [s]
           (binding [*ns* (find-ns 'clojure.core)]
             (read-string {:read-cond :preserve} s))))
    (ns-interns 'clojure.core)))

(def differences
  (remove
    #(= (with-out-str (cpp/pprint %)) (with-out-str (pp/pprint %)))
    clojure-core-sources))

(count differences)

;; There are at most 25 differences between how clojure.pprint and SUT
;; print clojure.core sources.
;;
;; Haven't gone through all of them yet, but the many of them seem to be
;; cases where clojure.pprint exceeds *print-right-margin* even though
;; it doesn't have to.
(xr/check! (partial >= 25))

(comment
  ;; Spit a command to diff clojure.pprint and me.flowthing.pp output
  (do
    (require '[clojure.java.io :as io])

    (let [tmpdir (io/file (System/getProperty "java.io.tmpdir") "pp")
          cpp-file (io/file tmpdir "cpp.clj")
          pp-file (io/file tmpdir "pp.clj")]

      (.mkdirs tmpdir)

      (when (.exists cpp-file) (.delete cpp-file))
      (when (.exists pp-file) (.delete pp-file))

      (run!
        (fn [source]
          (let [cpp-source (with-out-str (cpp/pprint source))
                pp-source (with-out-str (pp/pprint source))]
            (when (not= cpp-source pp-source)
              (spit cpp-file cpp-source :append true)
              (spit pp-file pp-source :append true))))
        clojure-core-sources)

      (printf "diff -u %s %s | diff-so-fancy\n" cpp-file pp-file)))
  ,,,)
